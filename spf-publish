#!/bin/sh
case $ZSH_VERSION in '') :;; *) alias -g '${1+"$@"}="$@"';; esac &&
CDPATH= && unset CDPATH

. ./prjlib.sh
. ./sptools.sh
. ./spftools.sh

case $? in 0) :;; *) (exit "$?");; esac &&
{ test "$#" != 0 ||
  prj_fail 'usage: spf-publish /package/host/example.org/foreign/foo-1.2.3[+spf4] [...]'
} &&
prj_set prj_program spf-publish &&
sp_validate_root &&

spf_make_package_() {
  spf_url_=$1 &&
  is_static=`spf_is_static "${spf_url_?}"`
  if test $? = 0 ; then echo "static" ;  else echo "dynamic" ; fi 
} &&
spf_process_url_() {
  spf_url_=$1 &&
  sp_tar_base=`prj_basename "${spf_url_?}"` &&
  sp_find_tar &&
  { test not_found = "${sp_tar?}" || return 0; } &&
  if prj_is_set SP_TARDIR_FLAT; then
    spf_tardir_=${SP_TARDIR_FLAT?} && spf_tmp_=/
  elif prj_is_set SP_TARDIR; then
    spf_tardir_=${SP_TARDIR?} && spf_tmp_=/${sp_category?}
  else
    spf_tardir_=$SP_ROOT/usr/local/src/package &&
    spf_tmp_=/${sp_category?}
  fi &&
  { test -d "${spf_tardir_?}"/. ||
    prj_fail "no such directory: ${spf_tardir_?}"; } &&
  spf_tardir_=${spf_tardir_?}${spf_tmp_?} &&
  prj_mkdir_p "${spf_tardir_?}" &&
  { prj_is_set spf_tmpdir_ ||
    prj_tmpdir spf_tmpdir_ "${spf_tardir_?}"; } &&
  { prj_download "${spf_url_?}" "${spf_tmpdir_?}" "${sp_tar_base?}" ||
    prj_savestatus rm -rf "${spf_tmpdir_?}"; } &&
  mv -f "${spf_tmpdir_?}/${sp_tar_base?}" "${spf_tardir_?}"
} &&

prj_unset spf_url_ spf_tmp_ spf_tardir_ spf_tmpdir_ &&
for sp_path in ${1+"$@"}; do
  { sp_path=`prj_sedarg1 's%/*$%%' "${sp_path?}"` &&
    case ${sp_path?} in
      /*) :;;
      *) prj_fail "package path must be absolute: ${sp_path?}";;
    esac &&
    spf_parse "${sp_path?}" &&
    if test '' = "${spf_version}"
      then prj_fail "package path must include a version: ${sp_path?}"
      else :
    fi &&
    spf_load_info &&
    eval "set x ${sp_path?}" && shift &&
#    eval "set x ${spf_url_home_?}" && shift &&
    while test "$#" != 0; do
      { eval "spf_make_package_ $1" &&
        shift
      } || exit "$?"
    done
  } || exit "$?"
done &&
if prj_is_set spf_tmpdir_
  then rm -rf "${spf_tmpdir_?}"
  else :
fi
